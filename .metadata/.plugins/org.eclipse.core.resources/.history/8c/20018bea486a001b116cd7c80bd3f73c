package _java._LEETCODE.Dynamic_Programing;

import java.util.*;

public class E7_Range_Sum_Query {

	public static void main(String[] args) {
		int nums[][] = { { -2, 0, 3, -5, 2, -1 }, { 0, 2 }, { 2, 5 }, { 0, 5 } };

		List<Integer> ans = myApproach(nums);
		System.out.println("MyApproach: O(N) \n" + ans);
	}

	private static List<Integer> myApproach(int[][] nums) {
		List<Integer> ans = new ArrayList<>();
		int preSum[] = new int[nums[0].length];
			System.out.print(preSum.length + " ");
		int last = 0;
		for (int i = 0; i < nums[0].length; i++) {
			preSum[i] = last + nums[0][i];
			last = preSum[i];
		}

		for (int i = 1; i<nums.length; i++) {
			int left = 0;
			int right = 0;
			if (i == 0)
				left = 0;
			else
				left = preSum[nums[i][0] - 1];

			right = preSum[nums[i][1]];

			ans.add(right - left);
		}
		return ans;
	}

}
