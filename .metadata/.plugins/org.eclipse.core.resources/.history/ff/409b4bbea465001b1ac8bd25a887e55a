package _java._4Dynamic_Programing;

public class C14__R_Longest_Common_Subsequence {

	public static void main(String[] args) {
		// In Subsequence letter combination can be DISCONTINOUS
		String a = "abcdefh";
		String b = "abedfcg";

		int ans = LCS(a, b, a.length(), b.length());
		System.out.println("Recursive: \n" + ans);
	}

	private static int LCS(String a, String b, int n, int m) {
		// BASE CONDITION
		if (n == 0 || m == 0)
			return 0;
		// CHOICE DIAGRAM
		// MATCH
		if (a.charAt(n - 1) == b.charAt(m - 1))
			return 1 + LCS(a, b, n - 1, m - 1);
		else
			return Math.max(LCS(a, b, n - 1, m), LCS(a, b, n, m - 1));
	}

}
