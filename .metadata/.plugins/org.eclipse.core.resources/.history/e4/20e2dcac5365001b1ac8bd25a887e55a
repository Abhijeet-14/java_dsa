package _java._4Dynamic_Programing;

public class C7_Count_No_Of_Subset_With_Given_Difference {

	public static void main(String[] args) {
		int arr[] = {1,1,2,3};
		int n = arr.length;
		int diff = 1;
		
		int sum_of_array = 0;
		for(int val: arr)
			sum_of_array += val;
		
		// S1-S2= Difference
		// S1+S2= Sum of Array
		
		// S1 = (Difference + Sum Of Array)/2
		
		int newSum = (diff + sum_of_array)/2;
		
		int ans = memoization(arr, n, newSum);
		System.out.println("Memoization: \n" + ans);
	}

	private static int memoization(int[] arr, int n, int sum) {
		if(n == 0 && sum != 0)
			return 0;
		
		if(sum == 0)
			return 1;
		
		if(arr[n-1] <= sum) 
			return memoization(arr, n-1, sum - arr[n-1]) + memoization(arr, n-1, sum);
		
		return memoization(arr, n-1, sum);
	}

}
