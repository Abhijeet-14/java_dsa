package _java._1Dynamic_Programing;

import java.util.ArrayList;

public class Gfg_3_Lis_sum_less_than_k {
	static int BS_NextImmediate(ArrayList<Integer> t, int element, int start, int end) {
		int mid = (start+ end)/2;
		
		while( start !=mid && end != mid) {
			if(t.get(mid)>= element)
				start = mid;
			else
				end = mid;
		}
		if(mid ==0 && t.get(mid)>=element)
		return mid;
		else
			return mid+1;
	}
	
	static int lis_less_k(int arr[],int k) {
		
		int sum=0;
		
		ArrayList<Integer> t = new ArrayList<>();
		
		t.add(arr[0]);
		int len=1;
		
		sum += arr[0];
		
		for(int i =1; i<arr.length ; i++) {
			if(sum<k) {
				if(t.get(len-1)<arr[i]) {
					t.add(arr[i]);
					len++;
					sum += arr[i];
				}
				else {
					int index = BS_NextImmediate(t,arr[i], 0, len);
					
					sum += arr[i] - t.get(index);
					t.set(index, arr[i]);
				}
			}
		}
		
		return t.size();
	}
	
	public static void main(String[] args) {
		int arr[] = {0,8,4,12,2,10,6,14,1,9,5,13,3,11,7, 5};
//		int arr[] = {5,3,6,7,8,9,1};
		
		int k = 40;
		
		System.out.println(lis_less_k(arr,k));
	}

}
